#  Copyright (C) 2018 Yunify, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this work except in compliance with the License.
#  You may obtain a copy of the License in the LICENSE file, or at:
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-neonsan-node
  namespace: {{ .Release.Namespace }}
  labels:
    app: csi-neonsan
    role: node
    owner: yunify
    ver: v1.2.0
spec:
  selector:
    matchLabels:
      app: csi-neonsan
      role: node
      owner: yunify
      ver: v1.2.0
  template:
    metadata:
      labels:
        app: csi-neonsan
        role: node
        owner: yunify
        ver: v1.2.0
    spec:
      serviceAccount: csi-neonsan-node
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: dedicated
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
      hostNetwork: true
      containers:
        - name: node-registrar
          image: "{{ .Values.registrar.repository }}:{{ .Values.registrar.tag }}"
          resources:
            limits:
              memory: "20Mi"
              cpu: "10m"
            requests:
              memory: "20Mi"
              cpu: "10m"
          args:
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/{{ .Values.driver.name }}/csi.sock"
            - "--v=5"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          lifecycle:
            preStop:
              exec:
                command: [
                  "/bin/sh", "-c",
                  "rm -rf /registration/{{ .Values.driver.name | replace " " "" }} \
                  /registration/{{ .Values.driver.name | replace " " "" }}-reg.sock"]
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/{{ .Values.driver.name }}/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
        - name: dev-dir
          hostPath:
            path: /dev
            type: Directory
